DATA="${DATA:-data}"

function find-data() {
	find "$DATA" -maxdepth 1 -type f -name '*.tsv'
}

function find-data-filtered() {
	[ -n "$1" ] || return 1
	[ -n "$2" ] || return 1

	find-data |\
	xargs grep -c ^newbook_ | awk -F: -v "c=$1" '$2==c{print $1}' |\
	xargs grep -c ^contbook | awk -F: -v "c=$2" '$2==c{print $1}'
}

function awk-tsv() {
	awk -F$'\t' -v OFS=$'\t' "$@"
}

function count() {
	sort | uniq -c | sed -e 's/ *//' -e 's/ /\t/'
}

function is-any-of() {
	[ -n "$1" ] || return 1
	local tested="$1"
	shift

	for i in "$@" ; do
		[ "$tested" = "$i" ] && return 0
	done
	return 1
}

function is-non-negative-integer() {
	for i in "$@" ; do
		expr "$i" + 1 >/dev/null 2>&1
		[ $? -lt 2 ] || return 1
		[ "$i" -ge 0 ] || return 1
	done
	return 0
}

function make-ranking() {
	[ -n "$1" ] || return 1

	xargs grep -h "^$1" | cut -f3,4 | count | sort -n -r -k1,1
}

function make-cooccur() {
	[ -n "$1" ] || return 1
	[ -n "$2" ] || return 1

	find-data | xargs grep -l "$2" | make-ranking "$1"
}

function make-nchars() {
	[ -n "$1" ] || return 1

	find-data | xargs grep -h "^$1" |\
	perl -CS -a -F'/\t/' -ne '
		$F[-1]=~s!https?://[-_a-zA-Z0-9./?%]+!!g;
		$F[-1]=~s/^\s+|\s+$//g;
		print join "\t",@F;
		print "\t",length($F[-1]),"\n";
	' | sort -n
}
