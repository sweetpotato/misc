DATA="${DATA:-data}"

function find-data() {
	find "$DATA" -maxdepth 1 -type f -name '*.tsv'
}

function find-data-filtered() {
	[ -n "$1" ] || return 1
	[ -n "$2" ] || return 1

	find-data |\
	xargs grep -c ^newbook_ | awk -F: -v "c=$1" '$2==c{print $1;}' |\
	xargs grep -c ^contbook | awk -F: -v "c=$2" '$2==c{print $1;}'
}

function is-any-of() {
	[ -n "$1" ] || return 1
	local tested="$1"
	shift
	for i in "$@" ; do
		[ "$tested" = "$i" ] && return 0 # success
	done
	return 1 # failure
}

function is-non-negative-integer() {
	for i in "$@" ; do
		expr "$i" + 1 >/dev/null 2>&1
		[ $? -lt 2 ] || return 1
		[ "$i" -ge 0 ] || return 1
	done
	return 0
}

function make-cooccur() {
	[ -n "$1" ] || return 1
	[ -n "$2" ] || return 1

	find-data | xargs grep -l "$2" | xargs grep -h "^$1" |\
	cut -s -f3,4 | sort | uniq -c | sort -n -r -k1,1
}

function make-nchars() {
	[ -n "$1" ] || return 1

	find-data | xargs grep -h "^$1" | awk -F$'\t' '{print $5;}' |\
	sed -r -e 's!https?://[-_a-zA-Z0-9./?%]+!!g' -e 's/^\s+|\s+$//g' |\
	perl -CS -ne 'chomp;print length($_),"\n"' | sort -n
}

function make-ranking() {
	[ -n "$1" ] || return 1

	xargs grep -h "^$1" | cut -s -f3,4 | sort | uniq -c |\
	sort -n -r -k1,1 | sed -e 's/ *//' -e 's/ /\t/'
}
